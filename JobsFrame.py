# -*- coding: iso-8859-15 -*-
# generated by wxGlade HG on Fri Feb 11 15:13:32 2011

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode

# end wxGlade

import db

class JobsFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: JobsFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.opt_jobs = wx.Choice(self, -1, choices=[])
        self.text_title = wx.TextCtrl(self, -1, "")
        self.notebook_2 = wx.Notebook(self, -1, style=0)
        self.notebook_2_pane_1 = wx.Panel(self.notebook_2, -1)
        self.label_13 = wx.StaticText(self.notebook_2_pane_1, -1, "Client:")
        self.opt_client = wx.Choice(self.notebook_2_pane_1, -1, choices=[])
        self.label_14 = wx.StaticText(self.notebook_2_pane_1, -1, "X-Factor")
        self.text_exp_factor = wx.TextCtrl(self.notebook_2_pane_1, -1, "")
        self.notebook_2_pane_2 = wx.Panel(self.notebook_2, -1)
        self.text_address = wx.TextCtrl(self.notebook_2_pane_2, -1, "", style=wx.TE_MULTILINE|wx.HSCROLL|wx.TE_LINEWRAP)
        self.notebook_2_pane_3 = wx.Panel(self.notebook_2, -1)
        self.text_comments = wx.TextCtrl(self.notebook_2_pane_3, -1, "", style=wx.TE_MULTILINE)
        self.notebook_2_pane_4 = wx.Panel(self.notebook_2, -1)
        self.chk_active = wx.CheckBox(self.notebook_2_pane_4, -1, "Active")
        self.chk_autoprint = wx.CheckBox(self.notebook_2_pane_4, -1, "Autoprint")
        self.chk_vat = wx.CheckBox(self.notebook_2_pane_4, -1, "VAT")
        self.chk_weird = wx.CheckBox(self.notebook_2_pane_4, -1, "Weird")
        self.chk_wip = wx.CheckBox(self.notebook_2_pane_4, -1, "WIP")
        self.text_references = wx.TextCtrl(self.notebook_2, -1, "", style=wx.TE_MULTILINE)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_CHOICE, self.opt_jobs_change, self.opt_jobs)
        # end wxGlade
        
        # added by mcarter
        self.Bind(wx.EVT_CLOSE, self.OnClose)
        #self.clients = None
        self.jobs = None
        
    def __set_properties(self):
        # begin wxGlade: JobsFrame.__set_properties
        self.SetTitle("Jobs")
        self.SetSize((451, 331))
        self.opt_jobs.SetToolTipString("Job code")
        self.text_address.SetFont(wx.Font(10, wx.MODERN, wx.NORMAL, wx.NORMAL, 0, "Consolas"))
        self.text_comments.SetFont(wx.Font(10, wx.MODERN, wx.NORMAL, wx.NORMAL, 0, "Consolas"))
        self.notebook_2_pane_4.SetFont(wx.Font(10, wx.MODERN, wx.NORMAL, wx.NORMAL, 0, "Consolas"))
        self.text_references.SetFont(wx.Font(10, wx.MODERN, wx.NORMAL, wx.NORMAL, 0, "Consolas"))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: JobsFrame.__do_layout
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        sizer_7 = wx.BoxSizer(wx.VERTICAL)
        sizer_9 = wx.BoxSizer(wx.VERTICAL)
        sizer_8 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.FlexGridSizer(2, 2, 0, 0)
        sizer_6.Add(self.opt_jobs, 0, 0, 0)
        sizer_6.Add(self.text_title, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_13, 0, 0, 0)
        grid_sizer_1.Add(self.opt_client, 0, 0, 0)
        grid_sizer_1.Add(self.label_14, 0, 0, 0)
        grid_sizer_1.Add(self.text_exp_factor, 0, 0, 0)
        self.notebook_2_pane_1.SetSizer(grid_sizer_1)
        sizer_8.Add(self.text_address, 1, wx.EXPAND, 0)
        self.notebook_2_pane_2.SetSizer(sizer_8)
        sizer_9.Add(self.text_comments, 1, wx.EXPAND, 0)
        self.notebook_2_pane_3.SetSizer(sizer_9)
        sizer_7.Add(self.chk_active, 0, 0, 0)
        sizer_7.Add((20, 20), 0, 0, 0)
        sizer_7.Add(self.chk_autoprint, 0, 0, 0)
        sizer_7.Add((20, 20), 0, 0, 0)
        sizer_7.Add(self.chk_vat, 0, 0, 0)
        sizer_7.Add((20, 20), 0, 0, 0)
        sizer_7.Add(self.chk_weird, 0, 0, 0)
        sizer_7.Add((20, 20), 0, 0, 0)
        sizer_7.Add(self.chk_wip, 0, 0, 0)
        self.notebook_2_pane_4.SetSizer(sizer_7)
        self.notebook_2.AddPage(self.notebook_2_pane_1, "General")
        self.notebook_2.AddPage(self.notebook_2_pane_2, "Address")
        self.notebook_2.AddPage(self.notebook_2_pane_3, "Comments")
        self.notebook_2.AddPage(self.notebook_2_pane_4, "Options")
        self.notebook_2.AddPage(self.text_references, "References")
        sizer_6.Add(self.notebook_2, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_6)
        self.Layout()
        # end wxGlade

    def Show(self):
        print "jobs show"
        if self.jobs is None:
            self.jobs = db.GetJobs()
            for job_code in sorted(self.jobs.keys()):
                self.opt_jobs.Append(job_code)
                self.opt_jobs.SetSelection(0)
                
            
            self.clients = db.GetClients()
            #self.client_reverse_lookup = {}
            #for k in clients.keys():
            #    self.client_reverse_lookup[clients[k]] = k
            #self.client_opt_index
            for client in sorted(self.clients.values()):
                self.opt_client.Append(client)

            
            self.fill_frame()
        super(JobsFrame, self).Show()
        

    def OnClose(self, event):
        print "Im being closed"
        self.Hide()
        
    def opt_jobs_change(self, event): # wxGlade: JobsFrame.<event_handler>
        self.fill_frame()
        
    def fill_frame(self):
        job = self.jobs[self.opt_jobs.GetStringSelection()]
        self.text_title.SetValue(job['title'])
        
        # general panel
        client_id = job['briefclient']
        briefclient = self.clients[client_id]
        self.opt_client.SetStringSelection(briefclient)
        exp_factor = str(job['exp_factor'])
        print exp_factor
        self.text_exp_factor.SetValue(exp_factor)
        

        self.text_address.SetValue(job['address'])
        self.text_comments.SetValue(job['Comments'])
        
        # options panel
        self.chk_active.SetValue(job['active'])
        self.chk_autoprint.SetValue(job['Autoprint'])
        self.chk_vat.SetValue(job['vatable'])
        self.chk_weird.SetValue(job['Weird'])
        self.chk_wip.SetValue(job['WIP'])
        
        self.text_references.SetValue(job['references'])
        print job    

# end of class JobsFrame


